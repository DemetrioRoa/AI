# -*- coding: utf-8 -*-
"""PythonExercises_1_Demetrio_Roa_2077323

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xDjP-ReIGhsIJNgCYYbdexnB_wVYdsNQ

Text Analysis Tool: Create a Python program that reads a text file and performs various analyses on its content. The program should: Count the number of words, sentences, and paragraphs. Calculate the average word length. Identify the most common words and their frequencies.
"""

from collections import Counter # We import the Counter class from the collections module

def analyze_text(text):
    # Split the text into paragraphs
    paragraphs = text.split('\n\n')
    num_paragraphs = len(paragraphs)

    # Split the text into sentences
    sentences = text.replace('!', '.').replace('?', '.').split('.')
    num_sentences = len(sentences)

    # Split the text into words
    words = text.split()
    num_words = len(words)

    # Calculate the average word length
    avg_word_length = sum(len(word) for word in words) / num_words

    # Identify the most common words and their frequencies
    word_frequencies = Counter(words)
    most_common_words = word_frequencies.most_common(10)

    print(f'Number of paragraphs: {num_paragraphs}')
    print(f'Number of sentences: {num_sentences}')
    print(f'Number of words: {num_words}')
    print(f'Average word length: {avg_word_length:.2f}')
    print('Most common words:')
    for word, freq in most_common_words:
        print(f'{word}: {freq}')

# Test the function with your input
text = input("Enter your text: ")
analyze_text(text)

"""Hangman Game: Create a Python program that allows a user to play the game of Hangman. The program should randomly select a word from a predefined list, and the player must guess letters one at a time until they guess the word correctly or run out of attempts."""

# We import the random module
import random

# This is our Hangman function
def hangman():
    # We define a list of words to choose from
    words = ['kirby', 'jujutsu', 'kaguya', 'weekend', 'pizza', 'icecream', 'tacos']

    word = random.choice(words)

    # We create a list to store the guessed letters
    guessed = []

    attempts = 10

    print("Let's play Hangman!")

    # We start a loop that continues until the player runs out of attempts
    while attempts > 0:
        guessed_word = True

        # We go through each character in the word
        for char in word:
            if char in guessed:        # If the player has guessed the character, we print it
                print(char, end=' ')
            else:                      # If not, we print an underscore and set our variable to False
                print('_', end=' ')
                guessed_word = False

        # If the player has guessed the word, we end the game
        if guessed_word:
            print("\nYou win!")
            return

        # We ask the player to guess a letter
        guess = input("\nGuess a letter: ")

        # If the letter is in the word, we add it to the list of guessed letters
        if guess in word:
            guessed.append(guess)
        # If not, we reduce the number of attempts by 1
        else:
            attempts -= 1
            print("Incorrect! You have", attempts, "more guesses.")

    # If the player has run out of attempts, we end the game
    print("You lose! The word was:", word)

# We call our function to start the game
hangman()

"""Number Guessing Game: Create a program that generates a random number between 1 and 100, and then asks the user to guess the number. The program should provide hints to the user if the guessed number is greater or less than the target number, and keep asking for a new guess until the user guesses correctly."""

# We import the random module
import random

def guess_the_number():
    # Generate a random number between 1 and 100
    number_to_guess = random.randint(1, 100)

    # Ask the user to guess the number
    guess = int(input("Guess a number between 1 and 100: "))

    # Keep asking for a new guess until the user guesses correctly
    while guess != number_to_guess:
        # Provide a hint if the guessed number is less than the target number
        if guess < number_to_guess:
            print("Too low!")
        # Provide a hint if the guessed number is greater than the target number
        else:
            print("Too high!")
        # Ask for a new guess
        guess = int(input("Try again: "))

    # Congratulate the user when they guess correctly
    print("Congratulations! You guessed the number.")

# Start the game
guess_the_number()